{"version":3,"sources":["components/card/card.jsx","components/card-list/cardlist.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","Cardlist","monsters","map","App","state","fetch","then","response","json","users","setState","this","searchField","filteredMonsters","filter","includes","type","placeholder","onChange","e","target","value","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAW,iBAAhB,UACI,qBAAMC,IAAM,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACzB,mCAAML,EAAMI,QAAQE,KAApB,WCDKC,EAAW,SAACP,GAAD,OACtB,qBAAKC,UAAW,YAAhB,SACED,EAAMQ,SAASC,KAAI,SAACL,GAAD,OACnB,cAAC,EAAD,CAAyBA,QAAUA,GAAtBA,EAAQC,UCmCVK,G,wDArCd,aAAe,IAAD,8BACb,gBACKC,MAAQ,CACZH,SAAU,IAHE,E,qDAOd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAET,SAAUQ,S,oBAG7C,WAAU,IAAD,OACFR,EAAWU,KAAKP,MAAMH,SACtBW,EAAcD,KAAKP,MAAMQ,YACzBC,EAAmBZ,EAASa,QAAO,SAAAjB,GAAO,OAC/CA,EAAQE,KAAKgB,SAASH,MAEvB,OACC,sBAAKlB,UAAU,MAAf,UACC,kDACA,uBAAOA,UAAW,SACjBsB,KAAK,SACLC,YAAY,kBACZC,SAAU,SAACC,GACV,EAAKT,SAAS,CAAEE,YAAaO,EAAEC,OAAOC,QAAS,kBAC9CC,QAAQC,IAAI,EAAKnB,aAIpB,cAAC,EAAD,CAAUH,SAAUY,W,GAhCNW,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.97191ec0.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.styles.css\"\r\n\r\nexport const Card = (props) => (\r\n    <div className= \"card-container\">\r\n        <img  alt = \"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}/>    \r\n        <h1> {props.monster.name} </h1>\r\n    </div>\r\n)","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\n\r\nimport { Card } from \"../card/card\"\r\n\r\nexport const Cardlist = (props) => (\r\n\t\t<div className= 'card-list'>\r\n\t\t\t{props.monsters.map((monster) => (\r\n\t\t\t\t<Card key = {monster.id} monster ={monster} />\r\n\t\t\t))}\r\n\t\t</div>\r\n); \r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Cardlist } from \"./components/card-list/cardlist\";\nimport \"./search-box.styles.css\"\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((users) => this.setState({ monsters: users }));\n\t}\n\n\trender() {\n\t\tconst monsters = this.state.monsters;\n\t\tconst searchField = this.state.searchField;\n\t\tconst filteredMonsters = monsters.filter(monster => \n\t\t\tmonster.name.includes(searchField)\n\t\t\t)\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<input className= \"search\"\n\t\t\t\t\ttype=\"search\"\n\t\t\t\t\tplaceholder=\"search monsters\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.setState({ searchField: e.target.value }, () =>\n\t\t\t\t\t\t\tconsole.log(this.state)\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Cardlist monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}